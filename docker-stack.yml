version: '3.8'

# Docker Stack configuration for production deployment
# Use with: docker stack deploy -c docker-stack.yml catalyst9

services:
  # PostgreSQL with pgvector
  postgres:
    image: ankane/pgvector:v0.5.1-pg17
    networks:
      - catalyst9-net
    environment:
      POSTGRES_USER: catalyst9
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: catalyst9
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    secrets:
      - db_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M

  # Redis
  redis:
    image: redis:7-alpine
    networks:
      - catalyst9-net
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  # Ollama for embeddings
  ollama:
    image: ollama/ollama:latest
    networks:
      - catalyst9-net
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Catalyst9 API
  catalyst9-api:
    image: catalyst9/api:${VERSION:-latest}
    networks:
      - catalyst9-net
    environment:
      PORT: 8080
      DB_HOST: postgres
      DB_NAME: catalyst9
      DB_USER: catalyst9
      DB_PASSWORD_FILE: /run/secrets/db_password
      REDIS_HOST: redis:6379
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      OLLAMA_HOST: http://ollama:11434
    secrets:
      - db_password
      - jwt_secret
    volumes:
      - ./web/dist:/root/web/dist:ro
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx
  nginx:
    image: nginx:alpine
    networks:
      - catalyst9-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/catalyst9-docker.conf:/etc/nginx/conf.d/default.conf:ro
    secrets:
      - source: ssl_cert
        target: /etc/catalyst9/ssl/fullchain.pem
      - source: ssl_key
        target: /etc/catalyst9/ssl/privkey.pem
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 64M
    depends_on:
      - catalyst9-api

networks:
  catalyst9-net:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/Volumes/Extreme Pro}/docker-swarm/volumes/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/Volumes/Extreme Pro}/docker-swarm/volumes/redis
  ollama_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/Volumes/Extreme Pro}/docker-swarm/volumes/ollama

secrets:
  db_password:
    external: true
  jwt_secret:
    external: true
  ssl_cert:
    external: true
  ssl_key:
    external: true